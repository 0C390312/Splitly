plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.openapi.generator' version '7.4.0'
}

group = 'com.splitly'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

tasks.withType(JavaCompile) {
	options.compilerArgs += ["-Amapstruct.verbose=true"]
}

dependencies {
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.liquibase:liquibase-core:4.25.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.1'
	implementation 'org.postgresql:postgresql:42.7.1'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.19'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:testcontainers:1.19.3'
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/openapi.yaml"
	outputDir = "$buildDir/generated"
	apiPackage = "com.splitly.core.api"
	invokerPackage = "com.splitly.core.invoker"
	modelPackage = "com.splitly.core.model"
	configOptions.set(
		dateLibrary: "java8",
		interfaceOnly: "true",
		useSpringBoot3: "true"
	)
}

sourceSets {
	main.java.srcDirs += "$buildDir/generated"
}

tasks.named('compileJava') {
	dependsOn 'openApiGenerate'
}

tasks.named('test') {
	useJUnitPlatform()
}
